steps:
  # ===== BACKEND DEPLOYMENT =====
  
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:$COMMIT_SHA',
      '-t', 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:latest',
      '.'
    ]

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:latest']

  # Get GKE credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'container', 'clusters', 'get-credentials',
      'toxindex-gke',
      '--region=us-east4',
      '--project=$PROJECT_ID'
    ]

  # Update backend deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'set', 'image', 'deployment/backend',
      'backend=us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:latest',
      '-n', 'toxindex-app'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Restart backend deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'rollout', 'restart', 'deployment/backend',
      '-n', 'toxindex-app'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Wait for backend rollout
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'rollout', 'status', 'deployment/backend',
      '-n', 'toxindex-app'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Restart Celery worker
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'rollout', 'restart', 'deployment/celery-worker',
      '-n', 'toxindex-app'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Wait for Celery worker rollout
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'rollout', 'status', 'deployment/celery-worker',
      '-n', 'toxindex-app'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # ===== FRONTEND DEPLOYMENT =====

  # Install Node.js
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
        npm --version
        node --version

  # Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['ci']
    dir: 'frontend'

  # Build the frontend
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    dir: 'frontend'
    env:
      - 'CI=false'

  # Sync to GCS bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      '-m', 'rsync', '-r', '-d',
      'frontend/dist/',
      'gs://toxindex-react/'
    ]

  # Set cache control headers
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      '-m', 'setmeta',
      '-h', 'Cache-Control:no-store',
      'gs://toxindex-react/**'
    ]

  # Invalidate CDN cache
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'compute', 'url-maps', 'invalidate-cdn-cache',
      'frontend-url-map',
      '--path', '/*'
    ]

  # ===== VERIFICATION =====

  # Verify backend deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'wait', '--for=condition=ready', 'pod',
      '-l', 'app=backend',
      '-n', 'toxindex-app',
      '--timeout=300s'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Show backend deployment status
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'get', 'pods',
      '-n', 'toxindex-app',
      '-l', 'app=backend'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  - name: 'gcr.io/cloud-builders/kubectl'
    args: [
      'get', 'pods',
      '-n', 'toxindex-app',
      '-l', 'app=celery-worker'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-east4'
      - 'CLOUDSDK_CONTAINER_CLUSTER=toxindex-gke'

  # Verify frontend deployment
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['ls', 'gs://toxindex-react/']
    id: 'list-files'

  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cat', 'gs://toxindex-react/index.html']
    id: 'verify-index'

  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['ls', 'gs://toxindex-react/static/js/']
    id: 'verify-js'

  # Deployment summary
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸš€ Full Stack Deployment Summary"
        echo "================================"
        echo "âœ… Backend: Deployed successfully"
        echo "   - Image: us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:latest"
        echo "   - Service: backend"
        echo "   - Celery Worker: Restarted"
        echo ""
        echo "âœ… Frontend: Deployed successfully"
        echo "   - Bucket: gs://toxindex-react"
        echo "   - CDN: frontend-url-map"
        echo ""
        echo "ðŸŽ‰ Full stack deployment completed successfully!"

# Store images in Artifact Registry
images:
  - 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:$COMMIT_SHA'
  - 'us-docker.pkg.dev/$PROJECT_ID/toxindex-backend/backend:latest'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  env:
    - 'DOCKER_BUILDKIT=1'
    - 'NODE_ENV=production'

# Substitutions
substitutions:
  _REGISTRY: 'us-docker.pkg.dev'
  _IMAGE_NAME: 'toxindex-backend/backend'
  _CLUSTER_NAME: 'toxindex-gke'
  _REGION: 'us-east4'
  _NAMESPACE: 'toxindex-app'
  _GCS_BUCKET: 'toxindex-react'
  _CDN_URL_MAP: 'frontend-url-map'
  _BRANCH: 'gke' 